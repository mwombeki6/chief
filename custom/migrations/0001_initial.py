# Generated by Django 4.2 on 2023-06-07 11:08

import custom.manager
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=255, null=True, unique=True),
                ),
                ("last_name", models.CharField(max_length=255, null=True, unique=True)),
                ("username", models.CharField(max_length=255, null=True, unique=True)),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("employee_number", models.IntegerField(null=True, unique=True)),
                (
                    "title",
                    models.CharField(
                        choices=[
                            ("Head Of Department", "Head Of Department"),
                            ("Lecture", "Lecture"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("education_background", models.TextField(max_length=255, null=True)),
                ("student_reg_no", models.IntegerField(null=True, unique=True)),
                (
                    "class_course",
                    models.CharField(
                        choices=[
                            ("OD20-COE", "OD20-COE"),
                            ("OD21-COE", "OD21-COE"),
                            ("OD22-COE", "OD-22-COE"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        choices=[
                            ("Computer Department", "Computer Department"),
                            ("Mining Department", "Mining Department"),
                            (
                                "Mechanical Engineering Department",
                                "Mechanical Engineering Department",
                            ),
                            ("BioTech Department", "BioTech Department"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_institutionStaff", models.BooleanField(default=False)),
                ("is_institutionStudent", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", custom.manager.UserManager()),
            ],
        ),
    ]
